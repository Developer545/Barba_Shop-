{"ast":null,"code":"import { LoginComponent } from './pages/login.component';\nimport { RegisterComponent } from './pages/register.component';\nimport { DashboardComponent } from './pages/dashboard.component';\nimport { ClientDashboardComponent } from './pages/client-dashboard.component';\nimport { BarberDashboardComponent } from './pages/barber-dashboard.component';\nimport { adminGuard, barberGuard, clientGuard } from './guards/role.guard';\n/**\n * CONFIGURACIÓN DE RUTAS - Sistema de Citas Barbería\n *\n * DESCRIPCIÓN:\n * Aquí se definen todas las rutas de la aplicación con su protección.\n * Las rutas públicas (login, register) no requieren autenticación.\n * Las rutas protegidas requieren que el usuario esté logueado y tenga el rol correcto.\n *\n * RUTAS PÚBLICAS (sin protección):\n * - /login      → Página de ingreso\n * - /register   → Página de registro\n * - ''          → Redirige a /login por defecto\n *\n * RUTAS PROTEGIDAS (requieren autenticación + rol específico):\n * - /dashboard          → Solo ADMIN (administrador)\n * - /barber-dashboard   → Solo BARBER (barbero) y ADMIN\n * - /client-dashboard   → Solo CLIENT (cliente) y ADMIN\n *\n * RUTAS NO EXISTENTES:\n * - ** (wildcard)       → Cualquier ruta no definida redirige a /login\n *\n * GUARDS UTILIZADOS:\n * - authGuardFn        → Verifica que el usuario esté autenticado\n * - adminGuard         → Verifica que el usuario sea ADMIN\n * - barberGuard        → Verifica que el usuario sea BARBER o ADMIN\n * - clientGuard        → Verifica que el usuario sea CLIENT o ADMIN\n *\n * @author Sistema de Citas Barbería\n * @version 1.0\n */\nexport const routes = [\n// ========================================\n// RUTA RAÍZ - Redirigir a login\n// ========================================\n{\n  path: '',\n  redirectTo: '/login',\n  pathMatch: 'full'\n},\n// ========================================\n// RUTAS PÚBLICAS (Sin protección)\n// ========================================\n{\n  path: 'login',\n  component: LoginComponent,\n  data: {\n    title: 'Iniciar Sesión'\n  }\n}, {\n  path: 'register',\n  component: RegisterComponent,\n  data: {\n    title: 'Registrarse'\n  }\n},\n// ========================================\n// RUTAS PROTEGIDAS - ADMIN\n// ========================================\n{\n  path: 'dashboard',\n  component: DashboardComponent,\n  canActivate: [adminGuard],\n  // Solo ADMIN puede acceder\n  data: {\n    title: 'Dashboard - Administrador'\n  }\n},\n// ========================================\n// RUTAS PROTEGIDAS - BARBERO\n// ========================================\n{\n  path: 'barber-dashboard',\n  component: BarberDashboardComponent,\n  canActivate: [barberGuard],\n  // BARBER y ADMIN pueden acceder\n  data: {\n    title: 'Dashboard - Barbero'\n  }\n},\n// ========================================\n// RUTAS PROTEGIDAS - CLIENTE\n// ========================================\n{\n  path: 'client-dashboard',\n  component: ClientDashboardComponent,\n  canActivate: [clientGuard],\n  // CLIENT y ADMIN pueden acceder\n  data: {\n    title: 'Dashboard - Cliente'\n  }\n},\n// ========================================\n// RUTA WILDCARD - Rutas no definidas\n// ========================================\n{\n  path: '**',\n  redirectTo: '/login'\n}];","map":{"version":3,"names":["LoginComponent","RegisterComponent","DashboardComponent","ClientDashboardComponent","BarberDashboardComponent","adminGuard","barberGuard","clientGuard","routes","path","redirectTo","pathMatch","component","data","title","canActivate"],"sources":["C:\\Users\\danie\\OneDrive\\Desktop\\ues\\Citas_Barberia (2)\\Citas_Barberia\\frontend\\src\\app\\app.routes.ts"],"sourcesContent":["import { Routes } from '@angular/router';\nimport { LoginComponent } from './pages/login.component';\nimport { RegisterComponent } from './pages/register.component';\nimport { DashboardComponent } from './pages/dashboard.component';\nimport { ClientDashboardComponent } from './pages/client-dashboard.component';\nimport { BarberDashboardComponent } from './pages/barber-dashboard.component';\nimport { authGuardFn } from './guards/auth.guard';\nimport { adminGuard, barberGuard, clientGuard } from './guards/role.guard';\n\n/**\n * CONFIGURACIÓN DE RUTAS - Sistema de Citas Barbería\n *\n * DESCRIPCIÓN:\n * Aquí se definen todas las rutas de la aplicación con su protección.\n * Las rutas públicas (login, register) no requieren autenticación.\n * Las rutas protegidas requieren que el usuario esté logueado y tenga el rol correcto.\n *\n * RUTAS PÚBLICAS (sin protección):\n * - /login      → Página de ingreso\n * - /register   → Página de registro\n * - ''          → Redirige a /login por defecto\n *\n * RUTAS PROTEGIDAS (requieren autenticación + rol específico):\n * - /dashboard          → Solo ADMIN (administrador)\n * - /barber-dashboard   → Solo BARBER (barbero) y ADMIN\n * - /client-dashboard   → Solo CLIENT (cliente) y ADMIN\n *\n * RUTAS NO EXISTENTES:\n * - ** (wildcard)       → Cualquier ruta no definida redirige a /login\n *\n * GUARDS UTILIZADOS:\n * - authGuardFn        → Verifica que el usuario esté autenticado\n * - adminGuard         → Verifica que el usuario sea ADMIN\n * - barberGuard        → Verifica que el usuario sea BARBER o ADMIN\n * - clientGuard        → Verifica que el usuario sea CLIENT o ADMIN\n *\n * @author Sistema de Citas Barbería\n * @version 1.0\n */\n\nexport const routes: Routes = [\n  // ========================================\n  // RUTA RAÍZ - Redirigir a login\n  // ========================================\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  },\n\n  // ========================================\n  // RUTAS PÚBLICAS (Sin protección)\n  // ========================================\n\n  {\n    path: 'login',\n    component: LoginComponent,\n    data: { title: 'Iniciar Sesión' }\n  },\n\n  {\n    path: 'register',\n    component: RegisterComponent,\n    data: { title: 'Registrarse' }\n  },\n\n  // ========================================\n  // RUTAS PROTEGIDAS - ADMIN\n  // ========================================\n\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [adminGuard], // Solo ADMIN puede acceder\n    data: { title: 'Dashboard - Administrador' }\n  },\n\n  // ========================================\n  // RUTAS PROTEGIDAS - BARBERO\n  // ========================================\n\n  {\n    path: 'barber-dashboard',\n    component: BarberDashboardComponent,\n    canActivate: [barberGuard], // BARBER y ADMIN pueden acceder\n    data: { title: 'Dashboard - Barbero' }\n  },\n\n  // ========================================\n  // RUTAS PROTEGIDAS - CLIENTE\n  // ========================================\n\n  {\n    path: 'client-dashboard',\n    component: ClientDashboardComponent,\n    canActivate: [clientGuard], // CLIENT y ADMIN pueden acceder\n    data: { title: 'Dashboard - Cliente' }\n  },\n\n  // ========================================\n  // RUTA WILDCARD - Rutas no definidas\n  // ========================================\n\n  {\n    path: '**',\n    redirectTo: '/login'\n  }\n];"],"mappings":"AACA,SAASA,cAAc,QAAQ,yBAAyB;AACxD,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,kBAAkB,QAAQ,6BAA6B;AAChE,SAASC,wBAAwB,QAAQ,oCAAoC;AAC7E,SAASC,wBAAwB,QAAQ,oCAAoC;AAE7E,SAASC,UAAU,EAAEC,WAAW,EAAEC,WAAW,QAAQ,qBAAqB;AAE1E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAO,MAAMC,MAAM,GAAW;AAC5B;AACA;AACA;AACA;EACEC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,QAAQ;EACpBC,SAAS,EAAE;CACZ;AAED;AACA;AACA;AAEA;EACEF,IAAI,EAAE,OAAO;EACbG,SAAS,EAAEZ,cAAc;EACzBa,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAgB;CAChC,EAED;EACEL,IAAI,EAAE,UAAU;EAChBG,SAAS,EAAEX,iBAAiB;EAC5BY,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAa;CAC7B;AAED;AACA;AACA;AAEA;EACEL,IAAI,EAAE,WAAW;EACjBG,SAAS,EAAEV,kBAAkB;EAC7Ba,WAAW,EAAE,CAACV,UAAU,CAAC;EAAE;EAC3BQ,IAAI,EAAE;IAAEC,KAAK,EAAE;EAA2B;CAC3C;AAED;AACA;AACA;AAEA;EACEL,IAAI,EAAE,kBAAkB;EACxBG,SAAS,EAAER,wBAAwB;EACnCW,WAAW,EAAE,CAACT,WAAW,CAAC;EAAE;EAC5BO,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAqB;CACrC;AAED;AACA;AACA;AAEA;EACEL,IAAI,EAAE,kBAAkB;EACxBG,SAAS,EAAET,wBAAwB;EACnCY,WAAW,EAAE,CAACR,WAAW,CAAC;EAAE;EAC5BM,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAqB;CACrC;AAED;AACA;AACA;AAEA;EACEL,IAAI,EAAE,IAAI;EACVC,UAAU,EAAE;CACb,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}