version: '3.8'

services:
  # Backend - Spring Boot API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: barbershop-backend
    ports:
      - "8080:8080"
    environment:
      # Database - Neon (PostgreSQL Cloud)
      SPRING_DATASOURCE_URL: ${DATABASE_URL}
      SPRING_DATASOURCE_USERNAME: ${DATABASE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DATABASE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQL10Dialect
      
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-900000}
      JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION:-604800000}
      
      # Cloudinary Configuration
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      
      # CORS Configuration
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost,http://localhost:4200,http://localhost:80}
      
      # Logging
      LOGGING_LEVEL_ROOT: ${LOG_LEVEL:-INFO}
    depends_on:
      - frontend
    networks:
      - barbershop-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend - Angular Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: barbershop-frontend
    ports:
      - "80:80"
      - "4200:80"
    environment:
      API_URL: http://backend:8080
    depends_on:
      - backend
    networks:
      - barbershop-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  barbershop-network:
    driver: bridge
